-----------------------------------------------------------------------------------------
--
-- animation.lua
--
-----------------------------------------------------------------------------------------
-- Your code here
local composer = require( "composer" )

local scene = composer.newScene()

-- -----------------------------------------------------------------------------------
-- Code outside of the scene event functions below will only be executed ONCE unless
-- the scene is removed entirely (not recycled) via "composer.removeScene()"
function touchlistener( event )

		if (event.phase == "ended" ) then
			composer.gotoScene( "view1")
		end
		return true
end
-- -----------------------------------------------------------------------------------
-- Scene event functions
-- -----------------------------------------------------------------------------------
local sheet1 = graphics.newImageSheet( "Earth.png", { width=213, height=160, numFrames=13 } )

	local instance1 = display.newSprite( sheet1, { name="earth", start = 1, count = 13, time = 3000 } )
	instance1.x = display.contentCenterX
	instance1.y = display.contentCenterY
	instance1.xScale = 2
	instance1.yScale = 2
	instance1:play()

	instance1:addEventListener( "touch", touchlistener )
-- create()
function scene:create( event )

    -- Code here runs when the scene is first created but has not yet appeared on screen

    -- Assign "self.view" to local variable "sceneGroup" for easy reference
    local sceneGroup = self.view

    display.setDefault( "background", 1, 1, 1)
	-- -----------------------------------------------------------------------------------
	 -- Insert rectangle into "sceneGroup"

end


-- show()
function scene:show( event )

    local sceneGroup = self.view
    local phase = event.phase

    if ( phase == "will" ) then
        -- Code here runs when the scene is still off screen (but is about to come on screen)

    elseif ( phase == "did" ) then
        -- Code here runs when the scene is entirely on screen

    end
end


-- hide()
function scene:hide( event )

    local sceneGroup = self.view
    local phase = event.phase

    if ( phase == "will" ) then
		-- Code here runs when the scene is on screen (but is about to go off screen)

    elseif ( phase == "did" ) then
		-- Code here runs immediately after the scene goes entirely off screen

    end
end


-- destroy()
function scene:destroy( event )

	display.remove(instance1)
	instance1 = nil

	local sceneGroup = self.view


    -- Code here runs prior to the removal of scene's view

end


-- -----------------------------------------------------------------------------------
-- Scene event function listeners
-- -----------------------------------------------------------------------------------
scene:addEventListener( "create", scene )
scene:addEventListener( "show", scene )
scene:addEventListener( "hide", scene )
scene:addEventListener( "destroy", scene )
-- -----------------------------------------------------------------------------------

return scene
